nts test_cases/04_pthread_create.ll;
__thread_pool_lock : BitVector<32>
__thread_pool_selected[20] : BitVector<32>
init	( ( __thread_pool_lock = 0 ) && forall i : BitVector<32>[0, 19] . ( __thread_pool_selected[i] = 0 ) );
instances __thread_pool_routine[20], main[1];
thread_func {
	_lbb_var : BitVector<16>;
	initial	st_0_0;
	final	st_0_1;
	st_0_0 -> st_0_1 { havoc (  ) }
}

main {
	_lbb_var : BitVector<16>;
	id : BitVector<64>;
	initial	st_0_0;
	final	st_0_3;
	st_0_0 -> st_0_2 { id' = __thread_create ( 0 ) }
	st_0_2 -> st_0_3 { havoc (  ) }
}

__thread_pool_routine {
	initial	s_idle;
	s_idle -> s_running_1 { ( ( __thread_pool_selected[tid] = 1 ) && havoc (  ) ) }
	s_running_1 -> s_stopped { thread_func (  ) }
	s_stopped -> s_idle { ( __thread_pool_selected'[ tid ] = [0] && havoc ( __thread_pool_selected ) ) }
}

__thread_create {
	in	func_id : BitVector<32>;
	out	ret_tid : BitVector<64>;
	thread_id : BitVector<32>;
	initial	si;
	final	sf;
	error	se;
	si -> sl { ( ( ( __thread_pool_lock = 0 ) && ( __thread_pool_lock' = ( tid + 1 ) ) ) && ( ( thread_id' = 0 ) && havoc ( __thread_pool_lock, thread_id ) ) ) }
	sl -> sh { ( ( __thread_pool_selected[thread_id] = 0 ) && ( __thread_pool_selected'[ thread_id ] = [( func_id + 1 )] && havoc ( __thread_pool_selected ) ) ) }
	sl -> sn { ( ( __thread_pool_selected[thread_id] > 0 ) && havoc (  ) ) }
	sn -> sl { ( ( thread_id < 19 ) && ( ( thread_id' = ( thread_id + 1 ) ) && havoc ( thread_id ) ) ) }
	sn -> se { ( ( thread_id >= 19 ) && havoc (  ) ) }
	sh -> sf { ( ( ( __thread_pool_lock' = 0 ) && ( ret_tid' = thread_id ) ) && havoc ( __thread_pool_lock ) ) }
}

